<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blog.mapper.BlogMapper">

    <!--测试事务回滚特性的语句-->
    <insert id="insertBlog" parameterType="com.blog.bean.Blog">
        insert into blog
        (theme_id, title, content_abstract, markdown_content, html_content, commit_date,
        lasted_update_date, read_count, readable, cover_image)
        values
        (#{blog.theme_id}, #{blog.title}, #{blog.content_abstract}, #{blog.markdown_content},
        #{blog.html_content},
        now(), now(), #{blog.read_count}, #{blog.readable}, #{blog.cover_image})
    </insert>

    <select id="getAlgorithmBlogs" resultType="com.blog.bean.Blog">
        select id, title, 'NULL' as content, content_abstract, commit_date, lasted_update_date, read_count, readable
        from blog
        where theme_id = 1 and readable = 1
        order by commit_date desc
    </select>

    <select id="getBlogs" resultType="com.blog.bean.Blog">
        select id, title, 'NULL' as html_content, 'NULL' as markdown_content, content_abstract, commit_date, lasted_update_date, read_count, readable, cover_image
        from blog
        where theme_id != 1 and readable = 1
        order by commit_date desc
    </select>

    <select id="getAllBlogs" resultType="com.blog.bean.Blog">
        select id, title, 'NULL' as html_content, 'NULL' as markdown_content, content_abstract, commit_date, lasted_update_date, read_count, readable
        from blog
        order by commit_date desc
    </select>

    <select id="getBlogById" resultType="com.blog.bean.Blog" parameterType="int">
        select * from blog where id = #{id}
    </select>

    <update id="updateBlog" parameterType="com.blog.bean.Blog">
        update blog set
        theme_id = #{blog.theme_id},
        title = #{blog.title},
        content_abstract = #{blog.content_abstract},
        markdown_content = #{blog.markdown_content},
        html_content = #{blog.html_content},
        lasted_update_date = #{blog.lasted_update_date},
        readable = #{blog.readable},
        cover_image = #{blog.cover_image}
        where id = #{blog.id}
    </update>

    <update id="closeBlog" parameterType="int">
        update blog set readable = 0 where id = #{id}
    </update>

    <update id="openBlog" parameterType="int">
        update blog set readable = 1 where id = #{id}
    </update>

</mapper>